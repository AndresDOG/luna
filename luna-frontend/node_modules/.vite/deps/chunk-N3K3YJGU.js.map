{
  "version": 3,
  "sources": ["../../vuetify/src/labs/VPicker/VPicker.tsx", "../../vuetify/src/labs/VPicker/VPickerTitle.ts"],
  "sourcesContent": ["// Styles\nimport './VPicker.sass'\n\n// Components\nimport { VPickerTitle } from './VPickerTitle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider/VDefaultsProvider'\nimport { makeVSheetProps, VSheet } from '@/components/VSheet/VSheet'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nexport type VPickerSlots = {\n  header: never\n  default: never\n  actions: never\n  title: never\n}\n\nexport const makeVPickerProps = propsFactory({\n  bgColor: String,\n  landscape: Boolean,\n  title: String,\n  hideHeader: Boolean,\n\n  ...makeVSheetProps(),\n}, 'VPicker')\n\nexport const VPicker = genericComponent<VPickerSlots>()({\n  name: 'VPicker',\n\n  props: makeVPickerProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    useRender(() => {\n      const sheetProps = VSheet.filterProps(props)\n      const hasTitle = !!(props.title || slots.title)\n\n      return (\n        <VSheet\n          { ...sheetProps }\n          color={ props.bgColor }\n          class={[\n            'v-picker',\n            {\n              'v-picker--landscape': props.landscape,\n              'v-picker--with-actions': !!slots.actions,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { !props.hideHeader && (\n            <div\n              key=\"header\"\n              class={[\n                backgroundColorClasses.value,\n              ]}\n              style={[\n                backgroundColorStyles.value,\n              ]}\n            >\n              { hasTitle && (\n                <VPickerTitle key=\"picker-title\">\n                  { slots.title?.() ?? props.title }\n                </VPickerTitle>\n              )}\n\n              { slots.header && (\n                <div class=\"v-picker__header\">\n                  { slots.header() }\n                </div>\n              )}\n            </div>\n          )}\n\n          <div class=\"v-picker__body\">\n            { slots.default?.() }\n          </div>\n\n          { slots.actions && (\n            <VDefaultsProvider\n              defaults={{\n                VBtn: {\n                  slim: true,\n                  variant: 'text',\n                },\n              }}\n            >\n              <div class=\"v-picker__actions\">\n                { slots.actions() }\n              </div>\n            </VDefaultsProvider>\n          )}\n        </VSheet>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VPicker = InstanceType<typeof VPicker>\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VPickerTitle = createSimpleFunctional('v-picker-title')\n\nexport type VPickerTitle = InstanceType<typeof VPickerTitle>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;;;ACEO,IAAMA,eAAeC,uBAAuB,gBAAgB;;;ADoB5D,IAAMC,mBAAmBC,aAAa;EAC3CC,SAASC;EACTC,WAAWC;EACXC,OAAOH;EACPI,YAAYF;EAEZ,GAAGG,gBAAgB;AACrB,GAAG,SAAS;AAEL,IAAMC,UAAUC,iBAA+B,EAAE;EACtDC,MAAM;EAENC,OAAOZ,iBAAiB;EAExBa,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;MAAwBC;IAAsB,IAAIC,mBAAmBC,MAAMP,OAAO,OAAO,CAAC;AAClGQ,cAAU,MAAM;AACd,YAAMC,aAAaC,OAAOC,YAAYX,KAAK;AAC3C,YAAMY,WAAW,CAAC,EAAEZ,MAAMN,SAASS,MAAMT;AAEzC,aAAAmB,YAAAH,QAAAI,WAESL,YAAU;QAAA,SACPT,MAAMV;QAAO,SACd,CACL,YACA;UACE,uBAAuBU,MAAMR;UAC7B,0BAA0B,CAAC,CAACW,MAAMY;QACpC,GACAf,MAAMgB,KAAK;QACZ,SACOhB,MAAMiB;MAAK,CAAA,GAAA;QAAAC,SAAAA,MAAA;;AAAA,kBAEjB,CAAClB,MAAML,cAAUkB,YAAA,OAAA;YAAA,OAAA;YAAA,SAGR,CACLT,uBAAuBe,KAAK;YAC7B,SACM,CACLd,sBAAsBc,KAAK;UAC5B,GAAA,CAECP,YAAQC,YAAAO,cAAA;YAAA,OAAA;UAAA,GAAA;YAAAF,SAAAA,MAAA;;AAAA,wBAEJf,MAAAA,MAAMT,UAANS,gBAAAA,IAAAA,gBAAmBH,MAAMN,KAAK;;UAAA,CAAA,GAIlCS,MAAMkB,UAAMR,YAAA,OAAA;YAAA,SAAA;UAAA,GAAA,CAERV,MAAMkB,OAAO,CAAC,CAAA,CAEnB,CAAA,GAEJR,YAAA,OAAA;YAAA,SAAA;UAAA,GAAA,EAGGV,WAAMe,YAANf,8BAAiB,CAAA,GAGnBA,MAAMY,WAAOF,YAAAS,mBAAA;YAAA,YAED;cACRC,MAAM;gBACJC,MAAM;gBACNC,SAAS;cACX;YACF;UAAC,GAAA;YAAAP,SAAAA,MAAA,CAAAL,YAAA,OAAA;cAAA,SAAA;YAAA,GAAA,CAGGV,MAAMY,QAAQ,CAAC,CAAA,CAAA;UAAA,CAAA,CAGtB;;MAAA,CAAA;IAGP,CAAC;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["VPickerTitle", "createSimpleFunctional", "makeVPickerProps", "propsFactory", "bgColor", "String", "landscape", "Boolean", "title", "hideHeader", "makeVSheetProps", "VPicker", "genericComponent", "name", "props", "setup", "_ref", "slots", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "useRender", "sheetProps", "VSheet", "filterProps", "hasTitle", "_createVNode", "_mergeProps", "actions", "class", "style", "default", "value", "VPickerTitle", "header", "VDefaultsProvider", "VBtn", "slim", "variant"]
}
